// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
 

  accounts Account[]
  vehicles Vehicle[]
  reservations Reservation[]
}

model Account {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId 
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Subscription {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  startDate         DateTime
  endDate           DateTime
  totalPrice        Int
  createdAt         DateTime @default(now())

  vehicles Vehicle[]
}

model CarSharingPlatform {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  startDate         DateTime
  endDate           DateTime
  createdAt         DateTime @default(now())

  reservations Reservation[]
}

model Vehicle {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  make              String
  model             String
  year              Int
  vin               String
  state_registation String
  state_license_plate    String
  imageSrc          String
  createdAt         DateTime @default(now())
  category          String
  userId            String @db.ObjectId
  subscriptionId    String @db.ObjectId
  price             Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  subscription Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  reservations Reservation[]
}

model Reservation {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  userId            String @db.ObjectId
  vehicleId         String @db.ObjectId
  carSharingId      String @db.ObjectId
  startDate         DateTime
  endDate           DateTime
  totalPrice        Int
  createdAt         DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  vehicle Vehicle @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  carSharingPlatfrom CarSharingPlatform @relation(fields: [carSharingId], references: [id], onDelete: Cascade)
}